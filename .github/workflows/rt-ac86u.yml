name: ac86u

on:
  push:
  # tags: 
  #   - 1.*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: set up go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'tailscale/tailscale'
      - name: set env
        run: |
          ./build_dist.sh shellvars | tee -a $GITHUB_ENV
      - name: ac86u build cmd
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: arm
          GOARM: 7
        run: |
          mkdir -p build
          go build -o ./build/ -trimpath -ldflags "-s -w -X tailscale.com/version.Long=${{ env.VERSION_LONG }} -X tailscale.com/version.Short=${{ env.VERSION_SHORT }} -X tailscale.com/version.GitCommit=${{ env.VERSION_GIT_HASH }}" ./cmd/...
          ls -l ./build/

      # publish release asset
      - name: zip dist
        run: |
          cd ./build
          zip -Jr ./tailscale-${{ env.VERSION_LONG }}-ac86u-everything.zip ./*
          zip -Jr ./tailscale-${{ env.VERSION_LONG }}-ac86u.zip ./tailscale
          zip -Jr ./tailscaled-${{ env.VERSION_LONG }}-ac86u.zip ./tailscaled
          zip -Jr ./derper-${{ env.VERSION_LONG }}-ac86u.zip ./derper
          zip -Jr ./tailscale-${{ env.VERSION_LONG }}-ac86u-client.zip ./tailscale ./tailscaled
          ls -l
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{ env.VERSION_LONG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_LONG }}
          release_name: ${{ env.VERSION_LONG }}
          draft: false
          prerelease: false
      # if: ${{ github.ref != 'refs/heads/main' }}
      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ./build/*.zip
